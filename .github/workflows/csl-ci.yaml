name: CSL CI
on:
  push:
    branches: [ csl ]
    tags:
      - '*'
  pull_request:
    branches:
      - '**'
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:
jobs:

  requirements:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - run: |
          sudo apt-get update -y
          python3 -m pip install setuptools pip uv --upgrade
      - run: ./test/requirements.sh

  test:
    name: Build and test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - "wse2"
          - "wse3"
        target:
          - "dstream.hybrid_0_steady_1_stretched_2_algo.assign_storage_site"
          - "dstream.hybrid_0_steady_1_tilted_2_algo.assign_storage_site"
          - "dstream.steady_algo.assign_storage_site"
          - "dstream.stretched_algo.assign_storage_site"
          - "dstream.tilted_algo.assign_storage_site"
    env:
      CSLC: cslc
      CS_PYTHON: cs_python
      SINGULARITYENV_CSL_SUPPRESS_SIMFAB_TRACE: 1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install apt packages
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 15
          max_attempts: 3
          command: |
            sudo apt-get update
            sudo apt-get install -y parallel

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade uv
          uv pip install -r test/requirements.txt --system

      - name: Install Nix
        uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-22.11

      - name: Set up Nix Channels
        run: |
          nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs
          nix-channel --update

      - name: Test nix
        run: |
          nix-env -iA nixpkgs.cowsay nixpkgs.hello
          cowsay "Hello from Nix!"
          hello

      - name: Set up Apptainer
        run: echo "nix-env -iA nixpkgs.apptainer" | sh

      - name: Test Apptainer
        run: |
          apptainer --version
          sudo "$(which apptainer)" exec docker://busybox:latest echo "Hello from Singularity and Docker!"

      - name: Set up SDK
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 15
          max_attempts: 3
          command: |
            mkdir -p ~/cerebras/bin
            curl -L "${CEREBRAS_SDK_URL}" | tar -xzv -C ~/cerebras/bin
            echo "$HOME/cerebras/bin" >> $GITHUB_PATH
        env:
          CEREBRAS_SDK_URL: ${{ secrets.CEREBRAS_SDK_URL }}

      - run: |
          which cslc
          which csdb
          which cs_python
          which cs_readelf
          which sdk_debug_shell
      - run: sudo env PATH=$PATH cslc -h  >/dev/null 2>&1
      - run: sudo env PATH=$PATH csdb --help  >/dev/null 2>&1
      - run: sudo env PATH=$PATH cs_python -h  >/dev/null 2>&1
      - run: sudo env PATH=$PATH cs_readelf -h  >/dev/null 2>&1
      - run: sudo env PATH=$PATH sdk_debug_shell --help  >/dev/null 2>&1
      - run: echo "SINGULARITYENV_CSL_SUPPRESS_SIMFAB_TRACE ${SINGULARITYENV_CSL_SUPPRESS_SIMFAB_TRACE}"

      - name: Compile test kernel
        run: |
          sudo env PATH=$PATH CSLC=$CSLC CSLC_ARCH_FLAG=${{ matrix.arch }} \
          ./test/compile.sh  >/dev/null 2>&1

      - name: Execute test kernel
        run: |
          sudo env PATH=$PATH CS_PYTHON=$CS_PYTHON \
            ./test/test.sh ${{ matrix.target }}
